openapi: 3.0.0
info:
  title: every.io Task API
  description: An API to manage tasks (created in the context of the every.io development challenge)
  contact:
    name: Norberto Herz
    url: "https://norbertoherz.com"
  version: 1.0.0
servers:
  - url: "{custom_protocol}://{custom_url}/"
    description: Custom URL
    variables:
      custom_url:
        default: localhost:8080
        description: The base URL of the API
      custom_protocol:
        default: http
        description: The protocol of the API
tags:
  - name: Tasks
    description: Endpoints related to managing Tasks

paths:
  /tasks/:
    get:
      tags:
        - Tasks
      summary: Get all tasks for the logged user
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Tasks list
          content:
            application/json:
              schema:
                type: object
                properties:
                  tasks:
                    type: array
                    items:
                      $ref: "#/components/schemas/Task"
        "304":
          description: Not authorized
    post:
      tags:
        - Tasks
      summary: Create a new task
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskForCreation"
      responses:
        "201":
          description: Task created
          content:
            application/json:
              schema:
                type: object
                properties:
                  task:
                    $ref: "#/components/schemas/Task"
        "400":
          description: Bad request
        "304":
          description: Not authorized
  /tasks/{taskId}:
    patch:
      tags:
        - Tasks
      summary: Update an existing task
      security:
        - bearerAuth: []
      parameters:
        - $ref: "#/components/parameters/TaskId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/patchRequest"
              example:
                - op: replace
                - path: /status
                - value: "DONE"
      responses:
        "201":
          description: Task created
          content:
            application/json:
              schema:
                type: object
                properties:
                  task:
                    $ref: "#/components/schemas/Task"
        "400":
          description: Bad request
        "404":
          description: Task not found
        "304":
          description: Not authorized

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer

  parameters:
    TaskId:
      name: taskId
      in: path
      required: true
      schema:
        type: string
        example: 32ea7d4514a9a5cd1988b7a3096a21c7

  schemas:
    Task:
      type: object
      properties:
        _id:
          type: string
          example: "32ea7d4514a9a5cd1988b7a3096a21c7"
          description: Unique Task Identifier
        title:
          description: Title of the task
          type: string
          example: Write tests
        description:
          description: A long description for the task
          type: string
          example: Make sure writing tests for the most critical parts of the application
        status:
          description: The current status of the task (TODO, IN PROGRESS, DONE, ARCHIVED)
          type: string
          example: "IN PROGRESS"
        audit:
          type: object
          properties:
            createdBy:
              description: The id of the user that created the task
              type: string
              format: uuid
              example: "32ea7d4514a9a5cd1988b7a3096a21c7"
            createdAt:
              type: string
              format: date-time
              example: "2021-06-01T00:00:00.000Z"
            lastUpdatedAt:
              type: string
              format: date-time
              example: "2021-06-01T00:00:00.000Z"
    TaskForCreation:
      type: object
      properties:
        title:
          description: Title of the task
          type: string
          example: Write tests
        description:
          description: A long description for the task
          type: string
          example: Make sure writing tests for the most critical parts of the application
        status:
          description: The current status of the task (TODO, IN PROGRESS, DONE, ARCHIVED)
          type: string
          example: "TODO"
    patchRequest:
      # Taken from https://gist.github.com/theletterf/cbc36c937bf1da986b0f19ec4159622d
      type: array
      example:
        - op: replace
          path: /status
          value: "DONE"
      items:
        oneOf:
          - additionalProperties: false
            required:
              - value
              - op
              - path
            properties:
              path:
                description: A JSON Pointer path.
                type: string
              op:
                description: The operation to perform.
                type: string
                enum:
                  - add
                  - replace
                  - test
              value:
                description: The value to add, replace or test.
          - additionalProperties: false
            required:
              - op
              - path
            properties:
              path:
                description: A JSON Pointer path.
                type: string
              op:
                description: The operation to perform.
                type: string
                enum:
                  - remove
          - additionalProperties: false
            required:
              - from
              - op
              - path
            properties:
              path:
                description: A JSON Pointer path.
                type: string
              op:
                description: The operation to perform.
                type: string
                enum:
                  - move
                  - copy
